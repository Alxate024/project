{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Juan Pablo Alzate\\\\Documents\\\\project\\\\src\\\\pages\\\\ProyectPage.js\";\nimport React from 'react';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProjectPage() {\n  const renderAnalysisBlock = (title, description, pythonCode, analysisText, visualizationContent) => /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"mb-10 bg-white p-8 rounded-lg shadow-md border border-gray-200\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-3xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-blue-300\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 leading-relaxed mb-6\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-3\",\n        children: \"C\\xF3digo Python\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        className: \"bg-gray-800 text-white p-4 rounded-md overflow-x-auto text-sm\",\n        children: /*#__PURE__*/_jsxDEV(\"code\", {\n          children: pythonCode\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-3\",\n        children: \"An\\xE1lisis Textual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 leading-relaxed\",\n        children: analysisText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-xl font-semibold text-gray-800 mb-3\",\n        children: \"Visualizaci\\xF3n / Resultados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gray-100 p-6 rounded-lg border border-gray-300 min-h-[200px] flex items-center justify-center text-gray-500 italic\",\n        children: visualizationContent || /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Pega aqu\\xED tus im\\xE1genes de gr\\xE1ficos o tablas HTML generadas en Colab.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 36\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(motion.div, {\n    initial: {\n      opacity: 0,\n      y: 20\n    },\n    animate: {\n      opacity: 1,\n      y: 0\n    },\n    transition: {\n      duration: 0.8\n    },\n    className: \"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-extrabold text-gray-900 mb-6 text-center\",\n        children: \"PROYECTO FINAL DE INTELIGENCIA ARTIFICIAL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700 mb-8 text-center\",\n        children: \"NIVEL EXPLORADOR: Tu molde para el \\xE9xito en Ciencia de Datos y ML.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), renderAnalysisBlock(\"Introducción\", `Teniendo en cuenta el auge de la IA en esta nueva oleada de avances significativos, la ciencia de datos y el aprendizaje de máquina es esencial en la actualidad debido a la creciente cantidad de datos disponibles en todas las industrias y sectores. En un mundo impulsado por la información, la capacidad de recopilar, analizar y extraer conocimientos significativos de estos datos se ha vuelto crítica para el éxito empresarial y la toma de decisiones informadas.\n\n          Este curso proporciona a los estudiantes las habilidades necesarias para navegar por este vasto océano de datos, desde la recopilación y limpieza inicial hasta el análisis y la visualización. Al comprender cómo utilizar herramientas y técnicas de análisis de datos, los estudiantes pueden identificar tendencias, patrones y relaciones ocultas que de otro modo podrían pasar desapercibidas, lo que les permite tomar decisiones estratégicas respaldadas por evidencia y mejorar la eficiencia operativa en sus organizaciones.\n\n          Además, la ciencia de datos y el aprendizaje de máquina equipa a los campistas con habilidades altamente demandadas en el mercado laboral actual. Con la explosión de datos en prácticamente todos los aspectos de la vida y los negocios, existe una creciente demanda de profesionales capacitados en el manejo y análisis de datos. Al completar un curso de ciencia de datos y aprendizaje de máquina, los estudiantes se posicionan como candidatos altamente competitivos en una variedad de campos, incluyendo tecnología, finanzas, salud, marketing y más.`, `# No aplica código Python para la introducción`, `Esta sección establece el contexto y la importancia de la ciencia de datos y el aprendizaje automático en el panorama actual, destacando la relevancia del proyecto para los campistas.`, null), renderAnalysisBlock(\"Objetivo del Proyecto\", `Ilustrar las primeras fases del ciclo de vida de un proyecto de ML, incluyendo la detección del problema, la identificación de datos y stakeholders, y el análisis exploratorio de datos.`, `# No aplica código Python para el objetivo`, `El objetivo principal de este proyecto es guiar a los estudiantes a través de las etapas iniciales de un proyecto de Machine Learning, desde la conceptualización hasta el análisis exploratorio de datos, utilizando un conjunto de datos relevante.`, null), renderAnalysisBlock(\"Requerimientos\", `Los campistas trabajarán con datos relacionados con la transición energética justa, democratización del consumo energético, y la transformación productiva mediante ciencia y tecnología.\n          Herramientas: Jupyter Notebooks, Python, pandas, numpy.\n          Se requiere elaborar un documento en el cual se ilustren fases del ciclo de vida de un proyecto de ML, incluyendo la detección del problema, la identificación de datos y stakeholders, y el análisis exploratorio de datos.`, `# No aplica código Python para los requerimientos`, `Se detallan las herramientas y el enfoque temático del proyecto, asegurando que los estudiantes utilicen las tecnologías adecuadas para el análisis de datos en el contexto de la transición energética.`, null), renderAnalysisBlock(\"Estructura del proyecto\", `El proyecto debe contener como mínimo los siguientes componentes a partir del problema detectado por los campistas:\n          Introducción teórica sobre el ciclo de vida de proyectos de ML.\n          Selección del contexto y problema específico.\n          Análisis exploratorio de datos, incluyendo carga de datos, evaluación de calidad, tratamiento de datos ausentes, normalización y análisis univariado, bivariado y multivariado.`, `# No aplica código Python para la estructura del proyecto`, `Esta sección define los componentes esenciales que cada proyecto debe incluir, proporcionando una guía clara para la organización y el desarrollo del informe final.`, null), renderAnalysisBlock(\"1. Carga de datos e inspección inicial\", `Cargar el CSV usando Pandas. Mostrar df.info() y df.describe(). Explicar brevemente qué nos dice cada uno (número de registros, tipos de datos, valores no nulos, media, desviación, etc.).`, `import pandas as pd\nimport numpy as np\n\n# Asegúrate de que el archivo CSV esté en el entorno de Colab o montado desde Drive\n# df = pd.read_csv('Grupos_de_Investigaci_n_Reconocidos_20250814.csv')\n\n# Ejemplo de datos (¡reemplaza con tus datos reales!)\ndata = {\n    'NME_GRAN_AREA_GR': np.random.choice(['Ciencias Sociales', 'Ingeniería', 'Ciencias Naturales'], 100),\n    'EDAD_ANOS_GR': np.random.randint(1, 30, 100),\n    'NME_CLASIFICACION_GR': np.random.choice(['A1', 'A', 'B', 'C'], 100),\n    'CIUDAD': np.random.choice(['Bogotá', 'Medellín', 'Cali', 'Barranquilla'], 100),\n    'NOMBRE_ACTOR': [f'Grupo {i}' for i in range(100)],\n    'PUBLICACIONES': np.random.randint(0, 500, 100),\n    'INVESTIGADORES': np.random.randint(1, 50, 100),\n    'FINANCIACION_MILLONES': np.random.rand(100) * 1000\n}\ndf = pd.DataFrame(data)\n\nprint(\"Información general del DataFrame:\")\ndf.info()\nprint(\"\\\\nEstadísticas descriptivas del DataFrame:\")\ndf.describe()`, `En este primer paso, se carga el conjunto de datos de grupos de investigación. La función \\`df.info()\\` proporciona un resumen conciso del DataFrame, incluyendo el número de entradas, el tipo de dato de cada columna y la cantidad de valores no nulos, lo cual es crucial para identificar columnas con datos faltantes. Por otro lado, \\`df.describe()\\` ofrece estadísticas descriptivas para las columnas numéricas, como la media, desviación estándar, valores mínimos y máximos, y los cuartiles, lo que permite una comprensión inicial de la distribución y el rango de los datos.`, null), renderAnalysisBlock(\"2. Vista preliminar\", `Mostrar df.head(50). Describir qué campos hay y detectar visualmente posibles inconsistencias o datos faltantes.`, `print(\"Primeras 50 filas del DataFrame:\")\nprint(df.head(50))`, `La visualización de las primeras 50 filas del DataFrame (\\`df.head(50)\\`) permite una inspección rápida de la estructura de los datos. A través de esta vista preliminar, se pueden identificar los nombres de las columnas, el formato de los datos en cada una y detectar visualmente posibles inconsistencias, errores de entrada o la presencia de valores atípicos que podrían requerir una limpieza posterior. También es útil para confirmar que la carga del dataset se realizó correctamente.`, null), renderAnalysisBlock(\"3. Análisis de valores nulos\", `Usar df.isnull().sum() para mostrar conteo de nulos por columna. Explicar qué columnas tienen más datos faltantes y su posible impacto.`, `print(\"Conteo de valores nulos por columna:\")\nprint(df.isnull().sum())`, `El análisis de valores nulos mediante \\`df.isnull().sum()\\` es fundamental para evaluar la calidad del dataset. Esta operación revela la cantidad exacta de valores faltantes en cada columna. Las columnas con un alto número de nulos pueden indicar problemas en la recolección de datos o la necesidad de estrategias de imputación o eliminación. La presencia de nulos puede afectar la precisión de los análisis estadísticos y los modelos de Machine Learning, por lo que su identificación es el primer paso para un tratamiento adecuado.`, null), renderAnalysisBlock(\"4. Limpieza de datos\", `Usar dropna() para eliminar filas con nulos. Confirmar limpieza con isnull().sum(). Guardar el archivo limpio.`, `# Eliminar filas con cualquier valor nulo\ndf_cleaned = df.dropna()\n\nprint(\"\\\\nConteo de valores nulos después de la limpieza:\")\nprint(df_cleaned.isnull().sum())\n\n# Opcional: Guardar el DataFrame limpio\n# df_cleaned.to_csv('Grupos_de_Investigacion_Limpio.csv', index=False)\n# print(\"\\\\nDataFrame limpio guardado como 'Grupos_de_Investigacion_Limpio.csv'\")`, `La limpieza de datos, específicamente la eliminación de filas con valores nulos mediante \\`df.dropna()\\`, es una estrategia común para asegurar la integridad del dataset. Aunque simple, esta técnica puede reducir el tamaño del conjunto de datos si hay muchos nulos. La confirmación posterior con \\`df_cleaned.isnull().sum()\\` verifica que la operación fue exitosa y que no quedan valores faltantes. Es importante considerar el impacto de esta eliminación en la representatividad de los datos restantes.`, null), renderAnalysisBlock(\"5. Normalización y estandarización de variables numéricas\", `Seleccionar columnas numéricas. Aplicar Min-Max Scaling y Z-score Standardization con MinMaxScaler y StandardScaler. Explicar las diferencias y utilidad de cada método.`, `from sklearn.preprocessing import MinMaxScaler, StandardScaler\n\n# Seleccionar columnas numéricas para normalización/estandarización\nnumeric_cols = df_cleaned.select_dtypes(include=np.number).columns\ndf_numeric = df_cleaned[numeric_cols]\n\n# Min-Max Scaling\nscaler_minmax = MinMaxScaler()\ndf_minmax_scaled = pd.DataFrame(scaler_minmax.fit_transform(df_numeric), columns=numeric_cols)\nprint(\"\\\\nDataFrame con Min-Max Scaling (primeras 5 filas):\")\nprint(df_minmax_scaled.head())\n\n# Z-score Standardization\nscaler_standard = StandardScaler()\ndf_standard_scaled = pd.DataFrame(scaler_standard.fit_transform(df_numeric), columns=numeric_cols)\nprint(\"\\\\nDataFrame con Z-score Standardization (primeras 5 filas):\")\nprint(df_standard_scaled.head())`, `La normalización (Min-Max Scaling) y la estandarización (Z-score Standardization) son técnicas de preprocesamiento cruciales para variables numéricas. Min-Max Scaling escala los datos a un rango fijo (comúnmente entre 0 y 1), útil cuando se necesita que los datos estén en una escala específica o cuando los algoritmos no asumen una distribución gaussiana. Z-score Standardization transforma los datos para que tengan una media de 0 y una desviación estándar de 1, siendo ideal para algoritmos que asumen una distribución normal o que son sensibles a la escala de las características (como SVM o regresión lineal). La elección entre uno y otro depende del algoritmo de ML a utilizar y de la distribución de los datos.`, null), renderAnalysisBlock(\"6. Visualizaciones univariadas: Distribución de grupos por gran área de conocimiento\", `Gráfico de barras: Distribución de grupos por gran área de conocimiento (NME_GRAN_AREA_GR). Explicar qué áreas tienen mayor y menor representación y posibles razones.`, `import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(12, 7))\nsns.countplot(data=df_cleaned, y='NME_GRAN_AREA_GR', order=df_cleaned['NME_GRAN_AREA_GR'].value_counts().index, palette='viridis')\nplt.title('Distribución de Grupos de Investigación por Gran Área de Conocimiento')\nplt.xlabel('Número de Grupos')\nplt.ylabel('Gran Área de Conocimiento')\nplt.tight_layout()\nplt.show()`, `El gráfico de barras de la distribución de grupos por gran área de conocimiento (\\`NME_GRAN_AREA_GR\\`) revela las áreas académicas con mayor y menor concentración de investigación. Este tipo de visualización univariada es esencial para comprender el enfoque general del ecosistema de investigación. Las áreas con mayor representación podrían indicar prioridades nacionales, mayor financiación o una base académica más sólida, mientras que las áreas con menor representación podrían señalar nichos emergentes o campos con menor inversión.`, `<img src=\"https://via.placeholder.com/600x400?text=Gráfico+de+Barras+Áreas+de+Conocimiento\" alt=\"Gráfico de Barras Áreas de Conocimiento\" className=\"max-w-full h-auto mx-auto\"/>`), renderAnalysisBlock(\"7. Distribución de antigüedad de grupos\", `Gráfico de densidad (KDE) de EDAD_ANOS_GR. Calcular estadísticas: mínimo, máximo, promedio, mediana, desviación estándar. Interpretar picos, sesgo y posibles outliers.`, `import matplotlib.pyplot as plt\nimport seaborn as sns\n\nplt.figure(figsize=(10, 6))\nsns.kdeplot(df_cleaned['EDAD_ANOS_GR'], fill=True, color='purple')\nplt.title('Distribución de Antigüedad de Grupos de Investigación (Años)')\nplt.xlabel('Antigüedad (Años)')\nplt.ylabel('Densidad')\nplt.grid(axis='y', alpha=0.75)\nplt.show()\n\nprint(\"\\\\nEstadísticas de Antigüedad de Grupos:\")\nprint(df_cleaned['EDAD_ANOS_GR'].describe())`, `El gráfico de densidad (KDE) de la antigüedad de los grupos de investigación (\\`EDAD_ANOS_GR\\`) proporciona una visión suavizada de la distribución de edades. Los picos en el gráfico indican las edades más comunes de los grupos, mientras que la forma general revela si la distribución está sesgada (hacia grupos más jóvenes o más antiguos). Las estadísticas descriptivas (mínimo, máximo, promedio, mediana, desviación estándar) complementan la visualización, ofreciendo medidas precisas de tendencia central y dispersión. La identificación de posibles outliers (grupos extremadamente jóvenes o antiguos) puede ser relevante para análisis posteriores.`, `<img src=\"https://via.placeholder.com/600x400?text=Gráfico+KDE+Antigüedad\" alt=\"Gráfico KDE Antigüedad\" className=\"max-w-full h-auto mx-auto\"/>`), renderAnalysisBlock(\"8. Clasificación de grupos\", `Gráfico de pastel para NME_CLASIFICACION_GR. Analizar qué clasificaciones predominan.`, `import matplotlib.pyplot as plt\n\nclassification_counts = df_cleaned['NME_CLASIFICACION_GR'].value_counts()\n\nplt.figure(figsize=(8, 8))\nplt.pie(classification_counts, labels=classification_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette('pastel'))\nplt.title('Distribución de Grupos por Clasificación')\nplt.axis('equal') # Equal aspect ratio ensures that pie is drawn as a circle.\nplt.show()`, `El gráfico de pastel de la clasificación de los grupos (\\`NME_CLASIFICACION_GR\\`) ofrece una representación visual de la proporción de grupos en cada categoría (ej., A1, A, B, C). Este gráfico es útil para identificar rápidamente qué clasificaciones predominan en el dataset, lo que puede reflejar el nivel general de madurez y reconocimiento de la investigación en el país. Una alta concentración en clasificaciones superiores (como A1 o A) indicaría un ecosistema de investigación robusto y de alto impacto.`, `<img src=\"https://via.placeholder.com/500x500?text=Gráfico+de+Pastel+Clasificación\" alt=\"Gráfico de Pastel Clasificación\" className=\"max-w-full h-auto mx-auto\"/>`), renderAnalysisBlock(\"9. Análisis bivariado: Mapa de calor de grupos por clasificación en las 10 ciudades con más grupos\", `Mapa de calor (heatmap) de número de grupos por clasificación en las 10 ciudades con más grupos. Explicar patrones geográficos y concentración de clasificaciones.`, `import matplotlib.pyplot as plt\nimport seaborn as sns\n\n# Obtener las 10 ciudades con más grupos\ntop_10_cities = df_cleaned['CIUDAD'].value_counts().head(10).index\n\n# Filtrar el DataFrame para incluir solo estas ciudades\ndf_top_cities = df_cleaned[df_cleaned['CIUDAD'].isin(top_10_cities)]\n\n# Crear una tabla cruzada (pivot table)\nheatmap_data = pd.crosstab(df_top_cities['CIUDAD'], df_top_cities['NME_CLASIFICACION_GR'])\n\nplt.figure(figsize=(14, 8))\nsns.heatmap(heatmap_data, annot=True, fmt=\"d\", cmap=\"YlGnBu\", linewidths=.5)\nplt.title('Número de Grupos por Clasificación en las 10 Ciudades con Más Grupos')\nplt.xlabel('Clasificación del Grupo')\nplt.ylabel('Ciudad')\nplt.tight_layout()\nplt.show()`, `El mapa de calor del número de grupos por clasificación en las 10 ciudades con mayor concentración de investigación es una herramienta poderosa para el análisis bivariado. Permite identificar patrones geográficos y la concentración de clasificaciones específicas en diferentes ciudades. Las celdas más oscuras o con valores más altos indican una mayor presencia de grupos de una clasificación particular en una ciudad dada. Esto puede revelar centros de excelencia en ciertas áreas o la distribución desigual de la capacidad de investigación a nivel nacional.`, `<img src=\"https://via.placeholder.com/700x500?text=Mapa+de+Calor+Ciudades+Clasificación\" alt=\"Mapa de Calor Ciudades Clasificación\" className=\"max-w-full h-auto mx-auto\"/>`), renderAnalysisBlock(\"10. Treemap interactivo\", `Usar Plotly para mostrar ciudades y actores (CIUDAD, NOMBRE_ACTOR). Explicar la jerarquía, colores e interactividad.`, `import plotly.express as px\n\n# Para Plotly, asegúrate de tener los datos necesarios.\n# Este es un ejemplo conceptual, ya que Plotly no se renderiza directamente en React sin un componente específico.\n# Deberías generar el HTML/JSON de Plotly en Colab y luego incrustarlo aquí.\n\n# Ejemplo de cómo se generaría en Colab:\n# fig = px.treemap(df_cleaned, path=['CIUDAD', 'NME_GRAN_AREA_GR', 'NOMBRE_ACTOR'],\n#                  values='PUBLICACIONES', # O cualquier otra métrica para el tamaño\n#                  color='EDAD_ANOS_GR', # O cualquier otra métrica para el color\n#                  hover_data=['INVESTIGADORES'])\n# fig.show()\n# fig.write_html(\"treemap.html\") # Guardar como HTML y luego incrustar el contenido\n\nprint(\"El Treemap interactivo de Plotly es una poderosa herramienta para visualizar datos jerárquicos. En este caso, muestra la relación entre las ciudades y los actores (grupos de investigación o instituciones) dentro de esas ciudades. La jerarquía se representa por rectángulos anidados, donde el tamaño de cada rectángulo puede corresponder a una métrica (como la antigüedad del grupo o el número de publicaciones). Los colores pueden usarse para representar otra variable, como la clasificación del grupo. La interactividad permite a los usuarios hacer zoom en diferentes niveles de la jerarquía, revelando detalles específicos. Este gráfico es excelente para identificar rápidamente las ciudades con mayor actividad investigativa y los actores más prominentes dentro de ellas.\")`, `El Treemap interactivo de Plotly es una poderosa herramienta para visualizar datos jerárquicos. En este caso, muestra la relación entre las ciudades y los actores (grupos de investigación o instituciones) dentro de esas ciudades. La jerarquía se representa por rectángulos anidados, donde el tamaño de cada rectángulo puede corresponder a una métrica (como la antigüedad del grupo o el número de publicaciones). Los colores pueden usarse para representar otra variable, como la clasificación del grupo. La interactividad permite a los usuarios hacer zoom en diferentes niveles de la jerarquía, revelando detalles específicos. Este gráfico es excelente para identificar rápidamente las ciudades con mayor actividad investigativa y los actores más prominentes dentro de ellas.`, `<div className=\"bg-blue-50 p-4 rounded-md border border-blue-200 text-center\">\n            <p className=\"text-blue-800 font-semibold\">\n              Para el Treemap interactivo de Plotly, deberás generar el gráfico en Google Colab y luego incrustar el HTML o una imagen estática aquí.\n            </p>\n            <p className=\"text-gray-500 text-sm mt-2\">\n              (Plotly genera HTML interactivo que no se puede incrustar directamente como una imagen. Puedes guardar el gráfico como HTML en Colab y luego copiar el contenido HTML aquí, o tomar una captura de pantalla y pegarla como imagen.)\n            </p>\n            <img src=\"https://via.placeholder.com/700x500?text=Treemap+Interactivo+Plotly\" alt=\"Treemap Interactivo Plotly\" className=\"max-w-full h-auto mx-auto mt-4\"/>\n          </div>`), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"mb-10\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-blue-300\",\n          children: \"Entrega\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside text-gray-600 leading-relaxed\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Formato de Entrega: Entregar el informe en formato PDF y nombrar el archivo con el t\\xEDtulo del proyecto y el nombre del estudiante o grupo.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Plazo de Entrega: Fecha y hora l\\xEDmite de entrega.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Medio de Entrega: correo electr\\xF3nico del docente.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-3xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-blue-300\",\n          children: \"Evaluaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 leading-relaxed mb-4\",\n          children: \"El proyecto ser\\xE1 evaluado en funci\\xF3n de varios criterios como:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc list-inside text-gray-600 leading-relaxed\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Contenido del proyecto.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Aplicaci\\xF3n pr\\xE1ctica.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"An\\xE1lisis.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Presentaci\\xF3n.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Trabajo en equipo.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ProjectPage;\nvar _c;\n$RefreshReg$(_c, \"ProjectPage\");","map":{"version":3,"names":["React","motion","jsxDEV","_jsxDEV","ProjectPage","renderAnalysisBlock","title","description","pythonCode","analysisText","visualizationContent","className","children","fileName","_jsxFileName","lineNumber","columnNumber","div","initial","opacity","y","animate","transition","duration","_c","$RefreshReg$"],"sources":["C:/Users/Juan Pablo Alzate/Documents/project/src/pages/ProyectPage.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\nexport default function ProjectPage() {\r\n  const renderAnalysisBlock = (title, description, pythonCode, analysisText, visualizationContent) => (\r\n    <section className=\"mb-10 bg-white p-8 rounded-lg shadow-md border border-gray-200\">\r\n      <h2 className=\"text-3xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-blue-300\">\r\n        {title}\r\n      </h2>\r\n      <p className=\"text-gray-600 leading-relaxed mb-6\">{description}</p>\r\n\r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">Código Python</h3>\r\n        <pre className=\"bg-gray-800 text-white p-4 rounded-md overflow-x-auto text-sm\">\r\n          <code>{pythonCode}</code>\r\n        </pre>\r\n      </div>\r\n\r\n      <div className=\"mb-6\">\r\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">Análisis Textual</h3>\r\n        <p className=\"text-gray-700 leading-relaxed\">{analysisText}</p>\r\n      </div>\r\n\r\n      <div>\r\n        <h3 className=\"text-xl font-semibold text-gray-800 mb-3\">Visualización / Resultados</h3>\r\n        <div className=\"bg-gray-100 p-6 rounded-lg border border-gray-300 min-h-[200px] flex items-center justify-center text-gray-500 italic\">\r\n          {visualizationContent || <p>Pega aquí tus imágenes de gráficos o tablas HTML generadas en Colab.</p>}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.8 }}\r\n      className=\"min-h-screen bg-gradient-to-br from-green-50 to-blue-50 p-8\"\r\n    >\r\n      <div className=\"max-w-4xl mx-auto\">\r\n        <h1 className=\"text-4xl font-extrabold text-gray-900 mb-6 text-center\">\r\n          PROYECTO FINAL DE INTELIGENCIA ARTIFICIAL\r\n        </h1>\r\n        <p className=\"text-lg text-gray-700 mb-8 text-center\">\r\n          NIVEL EXPLORADOR: Tu molde para el éxito en Ciencia de Datos y ML.\r\n        </p>\r\n\r\n        {renderAnalysisBlock(\r\n          \"Introducción\",\r\n          `Teniendo en cuenta el auge de la IA en esta nueva oleada de avances significativos, la ciencia de datos y el aprendizaje de máquina es esencial en la actualidad debido a la creciente cantidad de datos disponibles en todas las industrias y sectores. En un mundo impulsado por la información, la capacidad de recopilar, analizar y extraer conocimientos significativos de estos datos se ha vuelto crítica para el éxito empresarial y la toma de decisiones informadas.\r\n\r\n          Este curso proporciona a los estudiantes las habilidades necesarias para navegar por este vasto océano de datos, desde la recopilación y limpieza inicial hasta el análisis y la visualización. Al comprender cómo utilizar herramientas y técnicas de análisis de datos, los estudiantes pueden identificar tendencias, patrones y relaciones ocultas que de otro modo podrían pasar desapercibidas, lo que les permite tomar decisiones estratégicas respaldadas por evidencia y mejorar la eficiencia operativa en sus organizaciones.\r\n\r\n          Además, la ciencia de datos y el aprendizaje de máquina equipa a los campistas con habilidades altamente demandadas en el mercado laboral actual. Con la explosión de datos en prácticamente todos los aspectos de la vida y los negocios, existe una creciente demanda de profesionales capacitados en el manejo y análisis de datos. Al completar un curso de ciencia de datos y aprendizaje de máquina, los estudiantes se posicionan como candidatos altamente competitivos en una variedad de campos, incluyendo tecnología, finanzas, salud, marketing y más.`,\r\n          `# No aplica código Python para la introducción`,\r\n          `Esta sección establece el contexto y la importancia de la ciencia de datos y el aprendizaje automático en el panorama actual, destacando la relevancia del proyecto para los campistas.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"Objetivo del Proyecto\",\r\n          `Ilustrar las primeras fases del ciclo de vida de un proyecto de ML, incluyendo la detección del problema, la identificación de datos y stakeholders, y el análisis exploratorio de datos.`,\r\n          `# No aplica código Python para el objetivo`,\r\n          `El objetivo principal de este proyecto es guiar a los estudiantes a través de las etapas iniciales de un proyecto de Machine Learning, desde la conceptualización hasta el análisis exploratorio de datos, utilizando un conjunto de datos relevante.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"Requerimientos\",\r\n          `Los campistas trabajarán con datos relacionados con la transición energética justa, democratización del consumo energético, y la transformación productiva mediante ciencia y tecnología.\r\n          Herramientas: Jupyter Notebooks, Python, pandas, numpy.\r\n          Se requiere elaborar un documento en el cual se ilustren fases del ciclo de vida de un proyecto de ML, incluyendo la detección del problema, la identificación de datos y stakeholders, y el análisis exploratorio de datos.`,\r\n          `# No aplica código Python para los requerimientos`,\r\n          `Se detallan las herramientas y el enfoque temático del proyecto, asegurando que los estudiantes utilicen las tecnologías adecuadas para el análisis de datos en el contexto de la transición energética.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"Estructura del proyecto\",\r\n          `El proyecto debe contener como mínimo los siguientes componentes a partir del problema detectado por los campistas:\r\n          Introducción teórica sobre el ciclo de vida de proyectos de ML.\r\n          Selección del contexto y problema específico.\r\n          Análisis exploratorio de datos, incluyendo carga de datos, evaluación de calidad, tratamiento de datos ausentes, normalización y análisis univariado, bivariado y multivariado.`,\r\n          `# No aplica código Python para la estructura del proyecto`,\r\n          `Esta sección define los componentes esenciales que cada proyecto debe incluir, proporcionando una guía clara para la organización y el desarrollo del informe final.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"1. Carga de datos e inspección inicial\",\r\n          `Cargar el CSV usando Pandas. Mostrar df.info() y df.describe(). Explicar brevemente qué nos dice cada uno (número de registros, tipos de datos, valores no nulos, media, desviación, etc.).`,\r\n          `import pandas as pd\r\nimport numpy as np\r\n\r\n# Asegúrate de que el archivo CSV esté en el entorno de Colab o montado desde Drive\r\n# df = pd.read_csv('Grupos_de_Investigaci_n_Reconocidos_20250814.csv')\r\n\r\n# Ejemplo de datos (¡reemplaza con tus datos reales!)\r\ndata = {\r\n    'NME_GRAN_AREA_GR': np.random.choice(['Ciencias Sociales', 'Ingeniería', 'Ciencias Naturales'], 100),\r\n    'EDAD_ANOS_GR': np.random.randint(1, 30, 100),\r\n    'NME_CLASIFICACION_GR': np.random.choice(['A1', 'A', 'B', 'C'], 100),\r\n    'CIUDAD': np.random.choice(['Bogotá', 'Medellín', 'Cali', 'Barranquilla'], 100),\r\n    'NOMBRE_ACTOR': [f'Grupo {i}' for i in range(100)],\r\n    'PUBLICACIONES': np.random.randint(0, 500, 100),\r\n    'INVESTIGADORES': np.random.randint(1, 50, 100),\r\n    'FINANCIACION_MILLONES': np.random.rand(100) * 1000\r\n}\r\ndf = pd.DataFrame(data)\r\n\r\nprint(\"Información general del DataFrame:\")\r\ndf.info()\r\nprint(\"\\\\nEstadísticas descriptivas del DataFrame:\")\r\ndf.describe()`,\r\n          `En este primer paso, se carga el conjunto de datos de grupos de investigación. La función \\`df.info()\\` proporciona un resumen conciso del DataFrame, incluyendo el número de entradas, el tipo de dato de cada columna y la cantidad de valores no nulos, lo cual es crucial para identificar columnas con datos faltantes. Por otro lado, \\`df.describe()\\` ofrece estadísticas descriptivas para las columnas numéricas, como la media, desviación estándar, valores mínimos y máximos, y los cuartiles, lo que permite una comprensión inicial de la distribución y el rango de los datos.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"2. Vista preliminar\",\r\n          `Mostrar df.head(50). Describir qué campos hay y detectar visualmente posibles inconsistencias o datos faltantes.`,\r\n          `print(\"Primeras 50 filas del DataFrame:\")\r\nprint(df.head(50))`,\r\n          `La visualización de las primeras 50 filas del DataFrame (\\`df.head(50)\\`) permite una inspección rápida de la estructura de los datos. A través de esta vista preliminar, se pueden identificar los nombres de las columnas, el formato de los datos en cada una y detectar visualmente posibles inconsistencias, errores de entrada o la presencia de valores atípicos que podrían requerir una limpieza posterior. También es útil para confirmar que la carga del dataset se realizó correctamente.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"3. Análisis de valores nulos\",\r\n          `Usar df.isnull().sum() para mostrar conteo de nulos por columna. Explicar qué columnas tienen más datos faltantes y su posible impacto.`,\r\n          `print(\"Conteo de valores nulos por columna:\")\r\nprint(df.isnull().sum())`,\r\n          `El análisis de valores nulos mediante \\`df.isnull().sum()\\` es fundamental para evaluar la calidad del dataset. Esta operación revela la cantidad exacta de valores faltantes en cada columna. Las columnas con un alto número de nulos pueden indicar problemas en la recolección de datos o la necesidad de estrategias de imputación o eliminación. La presencia de nulos puede afectar la precisión de los análisis estadísticos y los modelos de Machine Learning, por lo que su identificación es el primer paso para un tratamiento adecuado.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"4. Limpieza de datos\",\r\n          `Usar dropna() para eliminar filas con nulos. Confirmar limpieza con isnull().sum(). Guardar el archivo limpio.`,\r\n          `# Eliminar filas con cualquier valor nulo\r\ndf_cleaned = df.dropna()\r\n\r\nprint(\"\\\\nConteo de valores nulos después de la limpieza:\")\r\nprint(df_cleaned.isnull().sum())\r\n\r\n# Opcional: Guardar el DataFrame limpio\r\n# df_cleaned.to_csv('Grupos_de_Investigacion_Limpio.csv', index=False)\r\n# print(\"\\\\nDataFrame limpio guardado como 'Grupos_de_Investigacion_Limpio.csv'\")`,\r\n          `La limpieza de datos, específicamente la eliminación de filas con valores nulos mediante \\`df.dropna()\\`, es una estrategia común para asegurar la integridad del dataset. Aunque simple, esta técnica puede reducir el tamaño del conjunto de datos si hay muchos nulos. La confirmación posterior con \\`df_cleaned.isnull().sum()\\` verifica que la operación fue exitosa y que no quedan valores faltantes. Es importante considerar el impacto de esta eliminación en la representatividad de los datos restantes.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"5. Normalización y estandarización de variables numéricas\",\r\n          `Seleccionar columnas numéricas. Aplicar Min-Max Scaling y Z-score Standardization con MinMaxScaler y StandardScaler. Explicar las diferencias y utilidad de cada método.`,\r\n          `from sklearn.preprocessing import MinMaxScaler, StandardScaler\r\n\r\n# Seleccionar columnas numéricas para normalización/estandarización\r\nnumeric_cols = df_cleaned.select_dtypes(include=np.number).columns\r\ndf_numeric = df_cleaned[numeric_cols]\r\n\r\n# Min-Max Scaling\r\nscaler_minmax = MinMaxScaler()\r\ndf_minmax_scaled = pd.DataFrame(scaler_minmax.fit_transform(df_numeric), columns=numeric_cols)\r\nprint(\"\\\\nDataFrame con Min-Max Scaling (primeras 5 filas):\")\r\nprint(df_minmax_scaled.head())\r\n\r\n# Z-score Standardization\r\nscaler_standard = StandardScaler()\r\ndf_standard_scaled = pd.DataFrame(scaler_standard.fit_transform(df_numeric), columns=numeric_cols)\r\nprint(\"\\\\nDataFrame con Z-score Standardization (primeras 5 filas):\")\r\nprint(df_standard_scaled.head())`,\r\n          `La normalización (Min-Max Scaling) y la estandarización (Z-score Standardization) son técnicas de preprocesamiento cruciales para variables numéricas. Min-Max Scaling escala los datos a un rango fijo (comúnmente entre 0 y 1), útil cuando se necesita que los datos estén en una escala específica o cuando los algoritmos no asumen una distribución gaussiana. Z-score Standardization transforma los datos para que tengan una media de 0 y una desviación estándar de 1, siendo ideal para algoritmos que asumen una distribución normal o que son sensibles a la escala de las características (como SVM o regresión lineal). La elección entre uno y otro depende del algoritmo de ML a utilizar y de la distribución de los datos.`,\r\n          null\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"6. Visualizaciones univariadas: Distribución de grupos por gran área de conocimiento\",\r\n          `Gráfico de barras: Distribución de grupos por gran área de conocimiento (NME_GRAN_AREA_GR). Explicar qué áreas tienen mayor y menor representación y posibles razones.`,\r\n          `import matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\nplt.figure(figsize=(12, 7))\r\nsns.countplot(data=df_cleaned, y='NME_GRAN_AREA_GR', order=df_cleaned['NME_GRAN_AREA_GR'].value_counts().index, palette='viridis')\r\nplt.title('Distribución de Grupos de Investigación por Gran Área de Conocimiento')\r\nplt.xlabel('Número de Grupos')\r\nplt.ylabel('Gran Área de Conocimiento')\r\nplt.tight_layout()\r\nplt.show()`,\r\n          `El gráfico de barras de la distribución de grupos por gran área de conocimiento (\\`NME_GRAN_AREA_GR\\`) revela las áreas académicas con mayor y menor concentración de investigación. Este tipo de visualización univariada es esencial para comprender el enfoque general del ecosistema de investigación. Las áreas con mayor representación podrían indicar prioridades nacionales, mayor financiación o una base académica más sólida, mientras que las áreas con menor representación podrían señalar nichos emergentes o campos con menor inversión.`,\r\n          `<img src=\"https://via.placeholder.com/600x400?text=Gráfico+de+Barras+Áreas+de+Conocimiento\" alt=\"Gráfico de Barras Áreas de Conocimiento\" className=\"max-w-full h-auto mx-auto\"/>`\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"7. Distribución de antigüedad de grupos\",\r\n          `Gráfico de densidad (KDE) de EDAD_ANOS_GR. Calcular estadísticas: mínimo, máximo, promedio, mediana, desviación estándar. Interpretar picos, sesgo y posibles outliers.`,\r\n          `import matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\nplt.figure(figsize=(10, 6))\r\nsns.kdeplot(df_cleaned['EDAD_ANOS_GR'], fill=True, color='purple')\r\nplt.title('Distribución de Antigüedad de Grupos de Investigación (Años)')\r\nplt.xlabel('Antigüedad (Años)')\r\nplt.ylabel('Densidad')\r\nplt.grid(axis='y', alpha=0.75)\r\nplt.show()\r\n\r\nprint(\"\\\\nEstadísticas de Antigüedad de Grupos:\")\r\nprint(df_cleaned['EDAD_ANOS_GR'].describe())`,\r\n          `El gráfico de densidad (KDE) de la antigüedad de los grupos de investigación (\\`EDAD_ANOS_GR\\`) proporciona una visión suavizada de la distribución de edades. Los picos en el gráfico indican las edades más comunes de los grupos, mientras que la forma general revela si la distribución está sesgada (hacia grupos más jóvenes o más antiguos). Las estadísticas descriptivas (mínimo, máximo, promedio, mediana, desviación estándar) complementan la visualización, ofreciendo medidas precisas de tendencia central y dispersión. La identificación de posibles outliers (grupos extremadamente jóvenes o antiguos) puede ser relevante para análisis posteriores.`,\r\n          `<img src=\"https://via.placeholder.com/600x400?text=Gráfico+KDE+Antigüedad\" alt=\"Gráfico KDE Antigüedad\" className=\"max-w-full h-auto mx-auto\"/>`\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"8. Clasificación de grupos\",\r\n          `Gráfico de pastel para NME_CLASIFICACION_GR. Analizar qué clasificaciones predominan.`,\r\n          `import matplotlib.pyplot as plt\r\n\r\nclassification_counts = df_cleaned['NME_CLASIFICACION_GR'].value_counts()\r\n\r\nplt.figure(figsize=(8, 8))\r\nplt.pie(classification_counts, labels=classification_counts.index, autopct='%1.1f%%', startangle=90, colors=sns.color_palette('pastel'))\r\nplt.title('Distribución de Grupos por Clasificación')\r\nplt.axis('equal') # Equal aspect ratio ensures that pie is drawn as a circle.\r\nplt.show()`,\r\n          `El gráfico de pastel de la clasificación de los grupos (\\`NME_CLASIFICACION_GR\\`) ofrece una representación visual de la proporción de grupos en cada categoría (ej., A1, A, B, C). Este gráfico es útil para identificar rápidamente qué clasificaciones predominan en el dataset, lo que puede reflejar el nivel general de madurez y reconocimiento de la investigación en el país. Una alta concentración en clasificaciones superiores (como A1 o A) indicaría un ecosistema de investigación robusto y de alto impacto.`,\r\n          `<img src=\"https://via.placeholder.com/500x500?text=Gráfico+de+Pastel+Clasificación\" alt=\"Gráfico de Pastel Clasificación\" className=\"max-w-full h-auto mx-auto\"/>`\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"9. Análisis bivariado: Mapa de calor de grupos por clasificación en las 10 ciudades con más grupos\",\r\n          `Mapa de calor (heatmap) de número de grupos por clasificación en las 10 ciudades con más grupos. Explicar patrones geográficos y concentración de clasificaciones.`,\r\n          `import matplotlib.pyplot as plt\r\nimport seaborn as sns\r\n\r\n# Obtener las 10 ciudades con más grupos\r\ntop_10_cities = df_cleaned['CIUDAD'].value_counts().head(10).index\r\n\r\n# Filtrar el DataFrame para incluir solo estas ciudades\r\ndf_top_cities = df_cleaned[df_cleaned['CIUDAD'].isin(top_10_cities)]\r\n\r\n# Crear una tabla cruzada (pivot table)\r\nheatmap_data = pd.crosstab(df_top_cities['CIUDAD'], df_top_cities['NME_CLASIFICACION_GR'])\r\n\r\nplt.figure(figsize=(14, 8))\r\nsns.heatmap(heatmap_data, annot=True, fmt=\"d\", cmap=\"YlGnBu\", linewidths=.5)\r\nplt.title('Número de Grupos por Clasificación en las 10 Ciudades con Más Grupos')\r\nplt.xlabel('Clasificación del Grupo')\r\nplt.ylabel('Ciudad')\r\nplt.tight_layout()\r\nplt.show()`,\r\n          `El mapa de calor del número de grupos por clasificación en las 10 ciudades con mayor concentración de investigación es una herramienta poderosa para el análisis bivariado. Permite identificar patrones geográficos y la concentración de clasificaciones específicas en diferentes ciudades. Las celdas más oscuras o con valores más altos indican una mayor presencia de grupos de una clasificación particular en una ciudad dada. Esto puede revelar centros de excelencia en ciertas áreas o la distribución desigual de la capacidad de investigación a nivel nacional.`,\r\n          `<img src=\"https://via.placeholder.com/700x500?text=Mapa+de+Calor+Ciudades+Clasificación\" alt=\"Mapa de Calor Ciudades Clasificación\" className=\"max-w-full h-auto mx-auto\"/>`\r\n        )}\r\n\r\n        {renderAnalysisBlock(\r\n          \"10. Treemap interactivo\",\r\n          `Usar Plotly para mostrar ciudades y actores (CIUDAD, NOMBRE_ACTOR). Explicar la jerarquía, colores e interactividad.`,\r\n          `import plotly.express as px\r\n\r\n# Para Plotly, asegúrate de tener los datos necesarios.\r\n# Este es un ejemplo conceptual, ya que Plotly no se renderiza directamente en React sin un componente específico.\r\n# Deberías generar el HTML/JSON de Plotly en Colab y luego incrustarlo aquí.\r\n\r\n# Ejemplo de cómo se generaría en Colab:\r\n# fig = px.treemap(df_cleaned, path=['CIUDAD', 'NME_GRAN_AREA_GR', 'NOMBRE_ACTOR'],\r\n#                  values='PUBLICACIONES', # O cualquier otra métrica para el tamaño\r\n#                  color='EDAD_ANOS_GR', # O cualquier otra métrica para el color\r\n#                  hover_data=['INVESTIGADORES'])\r\n# fig.show()\r\n# fig.write_html(\"treemap.html\") # Guardar como HTML y luego incrustar el contenido\r\n\r\nprint(\"El Treemap interactivo de Plotly es una poderosa herramienta para visualizar datos jerárquicos. En este caso, muestra la relación entre las ciudades y los actores (grupos de investigación o instituciones) dentro de esas ciudades. La jerarquía se representa por rectángulos anidados, donde el tamaño de cada rectángulo puede corresponder a una métrica (como la antigüedad del grupo o el número de publicaciones). Los colores pueden usarse para representar otra variable, como la clasificación del grupo. La interactividad permite a los usuarios hacer zoom en diferentes niveles de la jerarquía, revelando detalles específicos. Este gráfico es excelente para identificar rápidamente las ciudades con mayor actividad investigativa y los actores más prominentes dentro de ellas.\")`,\r\n          `El Treemap interactivo de Plotly es una poderosa herramienta para visualizar datos jerárquicos. En este caso, muestra la relación entre las ciudades y los actores (grupos de investigación o instituciones) dentro de esas ciudades. La jerarquía se representa por rectángulos anidados, donde el tamaño de cada rectángulo puede corresponder a una métrica (como la antigüedad del grupo o el número de publicaciones). Los colores pueden usarse para representar otra variable, como la clasificación del grupo. La interactividad permite a los usuarios hacer zoom en diferentes niveles de la jerarquía, revelando detalles específicos. Este gráfico es excelente para identificar rápidamente las ciudades con mayor actividad investigativa y los actores más prominentes dentro de ellas.`,\r\n          `<div className=\"bg-blue-50 p-4 rounded-md border border-blue-200 text-center\">\r\n            <p className=\"text-blue-800 font-semibold\">\r\n              Para el Treemap interactivo de Plotly, deberás generar el gráfico en Google Colab y luego incrustar el HTML o una imagen estática aquí.\r\n            </p>\r\n            <p className=\"text-gray-500 text-sm mt-2\">\r\n              (Plotly genera HTML interactivo que no se puede incrustar directamente como una imagen. Puedes guardar el gráfico como HTML en Colab y luego copiar el contenido HTML aquí, o tomar una captura de pantalla y pegarla como imagen.)\r\n            </p>\r\n            <img src=\"https://via.placeholder.com/700x500?text=Treemap+Interactivo+Plotly\" alt=\"Treemap Interactivo Plotly\" className=\"max-w-full h-auto mx-auto mt-4\"/>\r\n          </div>`\r\n        )}\r\n\r\n        <section className=\"mb-10\">\r\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-blue-300\">\r\n            Entrega\r\n          </h2>\r\n          <ul className=\"list-disc list-inside text-gray-600 leading-relaxed\">\r\n            <li>Formato de Entrega: Entregar el informe en formato PDF y nombrar el archivo con el título del proyecto y el nombre del estudiante o grupo.</li>\r\n            <li>Plazo de Entrega: Fecha y hora límite de entrega.</li>\r\n            <li>Medio de Entrega: correo electrónico del docente.</li>\r\n          </ul>\r\n        </section>\r\n\r\n        <section>\r\n          <h2 className=\"text-3xl font-bold text-gray-800 mb-4 border-b-2 pb-2 border-blue-300\">\r\n            Evaluación\r\n          </h2>\r\n          <p className=\"text-gray-600 leading-relaxed mb-4\">\r\n            El proyecto será evaluado en función de varios criterios como:\r\n          </p>\r\n          <ul className=\"list-disc list-inside text-gray-600 leading-relaxed\">\r\n            <li>Contenido del proyecto.</li>\r\n            <li>Aplicación práctica.</li>\r\n            <li>Análisis.</li>\r\n            <li>Presentación.</li>\r\n            <li>Trabajo en equipo.</li>\r\n          </ul>\r\n        </section>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n}"],"mappings":"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,uPAAuP,EACvP,IACF,CAAC,EAEAA,mBAAmB,CAClB,gBAAgB,EAChB;AACV;AACA,uOAAuO,EAC7N,mDAAmD,EACnD,0MAA0M,EAC1M,IACF,CAAC,EAEAA,mBAAmB,CAClB,yBAAyB,EACzB;AACV;AACA;AACA,0LAA0L,EAChL,2DAA2D,EAC3D,sKAAsK,EACtK,IACF,CAAC,EAEAA,mBAAmB,CAClB,wCAAwC,EACxC,6LAA6L,EAC7L;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,EACJ,gkBAAgkB,EAChkB,IACF,CAAC,EAEAA,mBAAmB,CAClB,qBAAqB,EACrB,kHAAkH,EAClH;AACV,mBAAmB,EACT,weAAwe,EACxe,IACF,CAAC,EAEAA,mBAAmB,CAClB,8BAA8B,EAC9B,yIAAyI,EACzI;AACV,yBAAyB,EACf,shBAAshB,EACthB,IACF,CAAC,EAEAA,mBAAmB,CAClB,sBAAsB,EACtB,gHAAgH,EAChH;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kFAAkF,EACxE,wfAAwf,EACxf,IACF,CAAC,EAEAA,mBAAmB,CAClB,2DAA2D,EAC3D,0KAA0K,EAC1K;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,EACvB,+sBAA+sB,EAC/sB,IACF,CAAC,EAEAA,mBAAmB,CAClB,sFAAsF,EACtF,wKAAwK,EACxK;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,EACD,2hBAA2hB,EAC3hB,mLACF,CAAC,EAEAA,mBAAmB,CAClB,yCAAyC,EACzC,yKAAyK,EACzK;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,EACnC,4oBAA4oB,EAC5oB,iJACF,CAAC,EAEAA,mBAAmB,CAClB,4BAA4B,EAC5B,uFAAuF,EACvF;AACV;AACA;AACA;AACA;AAC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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}